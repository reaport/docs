openapi: 3.0.1
info:
  title: Passenger API
  version: v1

servers:
- url: https://passenger.reaport.ru/

paths:
  /driver/pause:
    post: 
      description: | 
        Приостанавливает работу модуля пассажиров. При вызове этого эндпоинта приостанавлиавется таймер,
        отвечающий за мониторинг рейсов и выполнение действий пассажиров
      tags:
        - Driver
      responses:
        '200':
          description: OK
  /driver/resume:
    post:
      description: | 
        Возобновляет работу пассажиров.

      tags:
        - Driver
      responses:
        '200':
          description: OK
  /flights/initialisedFlights:
    get:
      description: | 
        Возвращает список инициализированных рейсов, с которыми работает модуль пассажиров на данный момент.
      tags:
        - Flight
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightInfo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightInfo'
  /flights/passengerCount:
    get:
      description: | 
        Возвращает количество живых пассажиров для каждого рейса.
      tags:
        - Flight
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassengersPerFlight'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassengersPerFlight'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PassengersPerFlight'
components:
  schemas:
    FlightInfo:
      required:
        - availableMealTypes
        - flightId
      type: object
      properties:
        flightId:
          type: string
          nullable: true
        economySeats:
          type: integer
          format: int32
        vipSeats:
          type: integer
          format: int32
        availableMealTypes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    PassengersPerFlight:
      type: object
      properties:
        flightId:
          type: string
          nullable: true
        passengerCount:
          type: integer
          format: int32
      additionalProperties: false