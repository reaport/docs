openapi: 3.0.3
info:
  title: Reaport Register Module API
  description: Api для модуля регистрации пассажира на рейс
  version: 1.0.0

servers:
  - url: 'http://localhost:8080/'
    description: Local server

paths:
  /register/passenger:
    post:
      summary: Регистрация пассажира
      description: Получение от модуля генерации пассажиров человека для регистрации.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPassengerRequest'
      responses:
        '200':
          description: Успешная регистрация
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validError:
                  value:
                    error: "Validation error"
                wrongFood:
                  value:
                    error: "Wrong type of food"
                wrongBaggage:
                  value:
                    error: "Exceeding the allowed baggage size"
        '403':
          description: Регистрация не доступна
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                registerNotOpen:
                  value:
                    error: "Registration is not open"
                registerClose:
                  value:
                    error: "Flight check-in is closed"
        '404':
          description: Пассажир не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "The passenger was not found"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal server error"

  /register/flights:
    post:
      summary: Получение рейсов, на которые открывается регистрация
      description: Получение от модуля табло информации о рейсах, доступных для регистрации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/FlightStatusRequest'
            examples:
              twoFlightsExample:
                value:
                  - flightId: "a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8"
                    flightName: "SU-1234"
                    endRegisterTime: "2023-10-15T13:30:00Z"
                    departureTime: "2023-10-15T14:30:00Z"
                    gate: "A15"
                    terminal: "D"
                    aircraft:  # Добавлена информация о самолёте
                      totalRows: 30
                      totalSeatsPerRow: 6
                      rows:
                        - rowNumber: 1
                          seats:
                            - seatNumber: "1A"
                              seatType: "VIP"
                            - seatNumber: "1B"
                              seatType: "VIP"
                        - rowNumber: 2
                          seats:
                            - seatNumber: "2A"
                              seatType: "standard"
                            - seatNumber: "2B"
                              seatType: "standard"
                  - flightId: "b2c3d4e5-f6g7-8901-h2i3-j4k5l6m7n8o9"
                    flightName: "SU-5678"
                    endRegisterTime: "2023-10-15T14:00:00Z"
                    departureTime: "2023-10-15T15:00:00Z"
                    gate: "B10"
                    terminal: "E"
                    aircraft:  # Добавлена информация о самолёте
                      totalRows: 25
                      totalSeatsPerRow: 4
                      rows:
                        - rowNumber: 1
                          seats:
                            - seatNumber: "1A"
                              seatType: "VIP"
                            - seatNumber: "1B"
                              seatType: "VIP"
                        - rowNumber: 2
                          seats:
                            - seatNumber: "2A"
                              seatType: "standard"
                            - seatNumber: "2B"
                              seatType: "standard"
      responses:
        '200':
          description: Рейсы успешно зарегистрированы
        '400':
          description: Неверный запрос (ошибка валидации)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Validation error"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal server error"

components:
  schemas:
    RegisterPassengerRequest:
      type: object
      required:
        - idTraveler
      properties:
        idTraveler:
          type: string
          format: uuid
          description: Уникальный идентификатор пассажира (idTraveler)
        baggageWeight:
          type: number
          format: float
          description: Вес багажа (кг)
        foodOnBoard:
          type: string
          nullable: true
          enum: [Сет 1, Сет 2, Сет 3, Без питания]  # Тип питания как enum
          description: Новый тип питания
      example:
        idTraveler: "123e4567-e89b-12d3-a456-426614174000"
        baggageWeight: 23.5
        foodOnBoard: "Сет 1"

    FlightStatusRequest:
      type: object
      properties:
        flightId:
          type: string
          format: uuid
          description: Уникальный идентификатор рейса
        flightName:
          type: string
          description: Название рейса
        endRegisterTime:
          type: string
          format: date-time
          description: Окончание регистрации
        departureTime:
          type: string
          format: date-time
          description: Время вылета
        gate:
          type: string
          nullable: true
          description: Номер выхода (гейта)
        terminal:
          type: string
          nullable: true
          description: Терминал
        aircraft:  # Добавлена информация о рассадке
          $ref: '#/components/schemas/Aircraft'

    Aircraft:
      type: object
      properties:
        totalRows:
          type: integer
          description: Общее количество рядов в самолёте
        totalSeatsPerRow:
          type: integer
          description: Общее количество кресел в одном ряду
        rows:
          type: array
          items:
            $ref: '#/components/schemas/SeatRow'

    SeatRow:
      type: object
      properties:
        rowNumber:
          type: integer
          description: Номер ряда
        seats:
          type: array
          items:
            $ref: '#/components/schemas/Seat'

    Seat:
      type: object
      properties:
        seatNumber:
          type: string
          description: Номер места (например, "1A", "2B")
        seatType:
          type: string
          enum: [VIP, standard, disabled]
          description: Тип места (VIP, обычное, для маломобильных)

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Описание ошибки