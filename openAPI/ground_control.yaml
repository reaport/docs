openapi: 3.0.0
info:
  title: Ground Control API
  version: 1.0.0
  description: API для управления движением транспорта.

servers:
  - url: https://ground-control.reaport.ru
    description: Сервер для разработки, развернутый при помощи dokploy
  
tags:
  - name: map
    description: "Управление картой"
  - name: moving
    description: "Управление передвижением"
  - name: airplane
    description: "Управление обслуживанием самолета"

paths:
  /map:
    get:
      summary: Получить карту аэропорта
      description: Возвращает полную карту аэропорта в виде графа.
      tags:
        - map
      operationId: map_getAirportMap
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportMap'
              example:
                nodes:
                  - id: "node_1"
                    types: ["airplane"]
                  - id: "node_2"
                    types: ["catering"]
                edges:
                  - from: "node_1"
                    to: "node_2"
                    distance: 100

    put:
      summary: Обновить карту аэропорта
      description: Обновляет карту аэропорта.
      tags:
        - map
      operationId: map_updateAirportMap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AirportMap'
            example:
              nodes:
                - id: "node_1"
                  types: ["airplane"]
                - id: "node_2"
                  types: ["catering"]
              edges:
                - from: "node_1"
                  to: "node_2"
                  distance: 100
      responses:
        '200':
          description: Успешный запрос
        '400':
          description: Неверные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /map/refresh:
    post:
      summary: Возвращает карту к исходному состоянию
      description: Возвращает карту к исходному состоянию
      tags:
        - map
      operationId: map_refreshAirportMap
      responses:
        '200':
          description: Успешный запрос

  /map/config:
    get:
      summary: Получить конфигурацию карты аэропорта
      description: Возвращает конфигурацию аэропорта.
      tags:
        - map
      operationId: map_getAirportMapConfig
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportMapConfig'

  /route:
    post:
      summary: Запросить маршрут
      description: Запрашивает маршрут из точки А в точку Б.
      tags:
        - moving
      operationId: moving_getRoute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: ID начального узла
                to:
                  type: string
                  description: ID конечного узла
                type:
                  $ref: '#/components/schemas/VehicleType'
                  description: Тип транспорта
              required:
                - from
                - to
                - type
            example:
              from: "node_1"
              to: "node_3"
              type: "baggage"
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: ID узлов маршрута
              example: ["node_1", "node_2", "node_3"]
        '404':
          description: Маршрут не найден

  /move:
    post:
      summary: Запросить разрешение на перемещение
      description: Запрашивает разрешение на перемещение из одного узла в другой.
      tags:
        - moving
      operationId: moving_requestMove
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vehicleId:
                  type: string
                  description: ID транспорта
                vehicleType:
                  $ref: '#/components/schemas/VehicleType'
                from:
                  type: string
                  description: ID текущего узла
                to:
                  type: string
                  description: ID следующего узла
                withAirplane:
                  type: string
                  description: ID самолета, который следует за follow-me
              required:
                - vehicleId
                - vehicleType
                - from
                - to
            example:
              vehicleId: "truck1"
              vehicleType: "catering"
              from: "node_1"
              to: "node_2"
      responses:
        '200':
          description: Разрешение получено
          content:
            application/json:
              schema:
                type: object
                properties:
                  distance:
                    type: number
                    description: Расстояние до следующего узла
                required:
                  - distance
              example:
                distance: 100
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Перемещение запрещено
        '404':
          description: Один из узлов не найден
        '409':
          description: Узел занят

  /arrived:
    post:
      summary: Уведомить о прибытии в узел
      description: Уведомляет вышку о прибытии транспорта в узел.
      tags:
        - moving
      operationId: moving_notifyArrival
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vehicleId:
                  type: string
                  description: ID транспорта
                vehicleType:
                  $ref: '#/components/schemas/VehicleType'  
                nodeId:
                  type: string
                  description: ID узла
              required:
                - vehicleId
                - vehicleType
                - nodeId
            example:
              vehicleId: "truck1"
              vehicleType: "catering"
              nodeId: "node_2"
      responses:
        '200':
          description: Уведомление успешно обработано
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Узел не найден
          
  /register-vehicle/{type}:
    post:
      summary: Регистрация транспорта на карте
      description: В зависимости от типа транспорта отдает нужную начальную точку и id
      tags:
        - moving
      operationId: moving_registerVehicle
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/VehicleType'
          description: Тип транспорта
      responses:
        '200':
          description: Id узла начальной точки
          content:
            application/json:
              schema:
                type: object
                properties:
                  garrageNodeId:
                    type: string
                    description: ID узла
                  vehicleId:
                    type: string
                    description: ID транспорта
                  serviceSpots:
                    type: object
                    description: Id узлов парковочных мест для обслуживания самолетов (парковка\_самолета:парковка\_сервисной\_машинки)
                    additionalProperties:
                      type: string
                required:
                  - garrageNodeId
                  - vehicleId
                  - serviceSpots
              example:
                garrageNodeId: "garrage_baggage_1"
                vehicleId: "baggage_1"
                serviceSpots:
                  "airplane_parking_1": "airplane_parking_1_baggage_1"
                  "airplane_parking_2": "airplane_parking_2_baggage_1"
        '400':
          description: Неверные данные запроса
        '409':
          description: Взлетно-посадочная полоса занята
          
  /airplane/{id}/parking:
    get:
      summary: Получение свободного места парковки для самолета
      description: В зависимости от загрузки парковок отдает нужный узел
      tags:
        - airplane
      operationId: airplane_getParkingSpot
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID самолета
      responses:
        '200':
          description: Id узла парковочного места
          content:
            application/json:
              schema:
                type: object
                properties:
                  nodeId:
                    type: string
                    description: ID узла
                required:
                  - nodeId
              example:
                nodeId: "node_3"
        '400':
          description: Неверные данные запроса
        '409':
          description: Нет свободного парковочного места для самолета

  /airplane/{id}/take-off:
    post:
      summary: Фиксация вылета самолета
      description: Удаляется самолет с карты
      tags:
        - airplane
      operationId: airplane_takeOff
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID самолета
      responses:
        '200':
          description: Самолет улетел
        '404':
          description: Самолет не найден на ВПП

components:
  schemas:
    AirportMap:
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Node'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
      required:
        - nodes
        - edges
    AirportMapConfig:
      type: object
      properties:
        airstripNodeId:
          type: string
          description: ID узла взлетно-посадочной полосы
          example: "airstrip"
      required:
        - airstripNodeId

    Node:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор узла
        types:
          type: array
          items:
            $ref: '#/components/schemas/VehicleType'
        vehicles:
          type: array
          items:
            $ref: '#/components/schemas/Vehicle'
      required:
        - id
        - types

    Edge:
      type: object
      properties:
        from:
          type: string
          description: ID начального узла
        to:
          type: string
          description: ID конечного узла
        distance:
          type: number
          description: Расстояние между узлами
      required:
        - from
        - to
        - distance
        
    VehicleType:
      type: string
      enum: [airplane, catering, refueling, cleaning, baggage, follow-me, charging, bus, ramp]
      description: Тип транспорта

    Vehicle:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор транспорта
        type:
          $ref: '#/components/schemas/VehicleType'
      required:
        - id
        - type

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          enum:
            - VEHICLE_NOT_FOUND_IN_NODE
            - EDGE_NOT_FOUND
            - MAP_HAS_VEHICLES
        message:
          type: string
          description: Описание ошибки
      required:
        - code