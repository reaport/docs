openapi: 3.0.0
info:
  title: Airport Management API
  version: 1.0.0
  description: API для управления аэропортом

servers:
  - url: https://flight-board.reaport.ru/
    description: Сервер для табло

paths:
  /generate-flights:
    post:
      summary: Генерирует пару рейсов (прилет и вылет).
      description: |
        Принимает запрос с городами отправления и назначения, генерирует пару рейсов
        (один для прилета, другой для вылета) и возвращает их в виде списка.
      operationId: generateFlights
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightGenerateRequest'
      responses:
        '200':
          description: Успешная генерация рейсов. Возвращает список с двумя рейсами.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightDetails'
        '422':
          description: Ошибка валидации входных данных.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /flights/{flight_id}:
    get:
      summary: Получает информацию о конкретном рейсе.
      description: |
        Возвращает информацию о рейсе по его идентификатору.
        **Примечание:** Этот эндпоинт не используется в текущей реализации.
      operationId: getFlight
      parameters:
        - name: flight_id
          in: path
          required: true
          schema:
            type: string
          description: Уникальный идентификатор рейса.
          example: "ABC123"
      responses:
        '200':
          description: Успешный запрос. Возвращает информацию о рейсе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightDetails'
        '404':
          description: Рейс не найден.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Рейс не найден"
        '422':
          description: Ошибка валидации входных данных.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
  /tickets:
    get:
      summary: Получает информацию о рейсе с доступными местами для покупки билетов.
      description: |
        Возвращает информацию о рейсе, включая доступные места, классы мест, багаж и время регистрации.
      operationId: getTickets
      parameters:
        - name: flightId
          in: query
          required: true
          schema:
            type: string
          description: Уникальный идентификатор рейса.
          example: "ABC123"
        - name: aircraftId
          in: query
          required: true
          schema:
            type: string
          description: Уникальный идентификатор самолета.
          example: "XYZ789"
        - name: cityFrom
          in: query
          required: true
          schema:
            type: string
          description: Город отправления.
          example: "Москва"
        - name: cityTo
          in: query
          required: true
          schema:
            type: string
          description: Город назначения.
          example: "Лондон"
        - name: seatClass
          in: query
          required: true
          schema:
            type: string
          description: Класс места (например, FIRST, BUSINESS, PREMIUM_ECONOMY, ECONOMY).
          example: "BUSINESS"
      responses:
        '200':
          description: Успешный запрос. Возвращает информацию о рейсе и доступных местах.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketPurchaseInfoResponse'
        '404':
          description: Рейс не найден.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Рейс ABC123 не найден"
        '422':
          description: Ошибка валидации входных данных.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /tickets/available:
    get:
      summary: Получает список всех доступных рейсов на вылет с информацией для покупки билетов.
      description: |
        Возвращает список рейсов на вылет из Мосипска, для которых доступна покупка билетов.
        Включает информацию о доступных местах, багаже и времени регистрации.
      operationId: getAvailableFlights
      responses:
        '200':
          description: Успешный запрос. Возвращает список доступных рейсов.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketPurchaseInfoResponse'
        '404':
          description: Нет доступных рейсов.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Нет доступных рейсов"
        '422':
          description: Ошибка валидации входных данных.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /api/flight/all:
    get:
      summary: Получает список всех рейсов на вылет из Мосипска.
      description: |
        Возвращает список всех рейсов на вылет из Мосипска.
        Времена (вылета, прилета и начала регистрации) конвертируются в московский часовой пояс.
      operationId: getAllFlights
      responses:
        '200':
          description: Успешный запрос. Возвращает список рейсов.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightDetails'
        '404':
          description: Нет доступных рейсов.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Нет доступных рейсов"
        '422':
          description: Ошибка валидации входных данных.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /api/arrivalflight/all:
    get:
      summary: Получает список всех рейсов на прилет в Мосипск.
      description: |
        Возвращает список всех рейсов на прилет в Мосипск.
        Времена (вылета, прилета и начала регистрации) конвертируются в московский часовой пояс.
      operationId: getAllArrivalFlights
      responses:
        '200':
          description: Успешный запрос. Возвращает список рейсов.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlightDetails'
        '404':
          description: Нет доступных рейсов.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: "Нет доступных рейсов"
        '422':
          description: Ошибка валидации входных данных.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

components:
  schemas:
    FlightGenerateRequest:
      type: object
      properties:
        cityFrom:
          type: string
          description: Город отправления.
          example: "Москва"
        cityTo:
          type: string
          description: Город назначения.
          example: "Лондон"
      required:
        - cityFrom
        - cityTo

    FlightDetails:
      type: object
      properties:
        flightId:
          type: string
          description: Уникальный идентификатор рейса.
          example: "ABC123"
        cityFrom:
          type: string
          description: Город отправления.
          example: "Москва"
        cityTo:
          type: string
          description: Город назначения.
          example: "Лондон"
        departureTime:
          type: string
          format: date-time
          description: Время вылета.
          example: "2023-10-15T14:00:00Z"
        arrivalTime:
          type: string
          format: date-time
          description: Время прилета.
          example: "2023-10-15T18:00:00Z"
        status:
          type: string
          description: Статус рейса.
          example: "Scheduled"
      required:
        - flightId
        - cityFrom
        - cityTo
        - departureTime
        - arrivalTime
        - status

    TicketPurchaseInfoResponse:
      type: object
      properties:
        FlightId:
          type: string
          description: Уникальный идентификатор рейса.
          example: "ABC123"
        AircraftId:
          type: string
          description: Уникальный идентификатор самолета.
          example: "XYZ789"
        CityFrom:
          type: string
          description: Город отправления.
          example: "Москва"
        CityTo:
          type: string
          description: Город назначения.
          example: "Лондон"
        AvailableSeats:
          type: array
          items:
            $ref: '#/components/schemas/SeatInfo'
          description: Список доступных мест по классам.
        Baggage:
          type: string
          description: Максимальный вес багажа.
          example: "20 кг"
        TakeoffDateTime:
          type: string
          format: date-time
          description: Время вылета.
          example: "2023-10-15T14:00:00Z"
        LandingDateTime:
          type: string
          format: date-time
          description: Время прилета.
          example: "2023-10-15T18:00:00Z"
        RegistrationStartTime:
          type: string
          format: date-time
          description: Время начала регистрации.
          example: "2023-10-15T12:00:00Z"
      required:
        - FlightId
        - AircraftId
        - CityFrom
        - CityTo
        - AvailableSeats
        - Baggage
        - TakeoffDateTime
        - LandingDateTime
        - RegistrationStartTime

    SeatInfo:
      type: object
      properties:
        SeatClass:
          type: string
          description: Класс места (например, FIRST, BUSINESS, PREMIUM_ECONOMY, ECONOMY).
          example: "BUSINESS"
        SeatCount:
          type: integer
          description: Количество доступных мест в данном классе.
          example: 10
      required:
        - SeatClass
        - SeatCount

    ValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            type: object
            properties:
              loc:
                type: array
                items:
                  type: string
                description: Местоположение ошибки (например, поле в запросе).
              msg:
                type: string
                description: Сообщение об ошибке.
              type:
                type: string
                description: Тип ошибки.
            required:
              - loc
              - msg
              - type
      required:
        - detail