openapi: 3.0.0
info:
  title: Charge API
  description: |
    API для управления процессом зарядки самолетов. Для подробной информации смотрите [документацию](https://docs.google.com/document/d/1-A99pLnf-T3KJgUowspAIestsUUSzbDQ0Sfr5KvSmdI/edit?tab=t.7lbm2zu22odb).
  version: 1.0.0

servers:
  - url: https://charge.reaport.ru
    description: Сервер для зарядки самолёта

paths:
  /request:
    post:
      summary: Запрос на зарядку
      description: |
        Когда самолет на парковочном месте, оркестратор отправляет запрос на зарядку.
      operationId: RequestCharging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargingRequest'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingResponse'
              examples:
                ValidRequest:
                  value:
                    wait: true
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingErrorResponse'
              examples:
                MissingNodeId:
                  value:
                    errorCode: 100
                    message: "NodeId is required"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingErrorResponse'
              examples:
                InternalServerError:
                  value:
                    errorCode: 500
                    message: "InternalServerError"

  /complete:
    post:
      summary: Завершение зарядки
      description: |
        Оркестратор отправляет запрос на прекращение зарядки, когда кейтеринг выполнен.
      operationId: CompleteCharging
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargingCompletionRequest'
      responses:
        '204':
          description: Успешный ответ
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingErrorResponse'
              examples:
                MissingNodeId:
                  value:
                    errorCode: 100
                    message: "NodeId is required"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingErrorResponse'
              examples:
                InternalServerError:
                  value:
                    errorCode: 500
                    message: "InternalServerError"
                    
/admin/config:
    get:
      summary: Получить текущую конфигурацию админки
      tags:
        - admin
      operationId: GetAdminConfig
      responses:
        '200':
          description: Текущая конфигурация параметров зарядки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfig'

    post:
      summary: Обновить параметры конфигурации
      tags:
        - admin
      operationId: UpdateAdminConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminConfig'
      responses:
        '200':
          description: Конфигурация успешно обновлена
        '400':
          description: Ошибка в параметрах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingErrorResponse'

  /admin/vehicles:
    get:
      summary: Получить список зарегистрированных транспортных средств
      tags:
        - admin
      operationId: GetVehiclesList
      responses:
        '200':
          description: Список машин и их статус
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargingVehicleInfo'

  /admin/registerVehicle:
    post:
      summary: Зарегистрировать новую машину
      tags:
        - admin
      operationId: RegisterVehicle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: Тип транспортного средства (например, charging)
              required:
                - type
      responses:
        '200':
          description: Машина успешно зарегистрирована
        '400':
          description: Ошибка регистрации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargingErrorResponse'
components:
  schemas:
    ChargingRequest:
      type: object
      properties:
        NodeId:
          type: string
          description: Идентификатор узла самолета (например, "node1").
      required:
        - NodeId

    ChargingCompletionRequest:
      type: object
      properties:
        NodeId:
          type: string
          description: Идентификатор узла самолета (например, "node1").
      required:
        - NodeId

    ChargingResponse:
      type: object
      properties:
        wait:
          type: boolean
          description: Сообщение о наличии свободных машин.
      required:
        - wait

    ChargingErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
          description: Код ошибки.
        message:
          type: string
          description: Сообщение об ошибке.
      required:
        - errorCode
        - message

    AdminConfig:
      type: object
      properties:
        MovementSpeed:
          type: number
          format: float
          description: Скорость передвижения машин (ед./сек)
        ConflictRetryCount:
          type: integer
          description: Количество попыток при конфликте маршрутов
      required:
        - MovementSpeed
        - ConflictRetryCount

    ChargingVehicleInfo:
      type: object
      properties:
        VehicleId:
          type: string
          description: Идентификатор транспортного средства
        Status:
          type: string
          description: Статус (Свободно / Занято)
        CurrentNode:
          type: string
          description: Текущий узел расположения машины
      required:
        - VehicleId
        - Status
        - CurrentNode
