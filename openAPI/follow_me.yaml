openapi: 3.0.0
info:
  title: Follow Me API
  description: |
    API для управления машинами сопровождения самолетов. Для подробной информации смотрите [документацию](https://docs.google.com/document/d/1-A99pLnf-T3KJgUowspAIestsUUSzbDQ0Sfr5KvSmdI/edit?tab=t.xxby8r33la9d).
  version: 1.0.0

servers:
  - url: https://follow-me.reaport.ru
    description: Сервер для follow-me
    
tags:
  - name: follow-me
    description: "Вызов машины сопровождения"
  - name: Admin
    description: "Ручки для работы админки"

paths:
  /get_car:
    post:
      summary: Запрос машины сопровождения
      description: |
        Запрашивает машину Follow me для судна.
        Оркестратор передает тип передвижения, а машина возвращает время ожидания.
      tags:
        - follow-me
      operationId: WeNeedFollowMe
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeNeedFollowMeRequest'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeNeedFollowMeResponse'
              examples:
                ValidRequest:
                  value:
                    CarId: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    Wait: false
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeNeedFollowMeErrorResponse'
              examples:
                InvalidAirplaneId:
                  value:
                    errorCode: 10
                    message: "Invalid AirplaneId"
                InvalidFollowType:
                  value:
                    errorCode: 11
                    message: "Invalid FollowType"
                InvalidGateNumber:
                  value:
                    errorCode: 12
                    message: "Invalid GateNumber"
                InvalidRunawayNumber:
                  value:
                    errorCode: 13
                    message: "Invalid RunawayNumber"
                WrongFollowType:
                  value:
                    errorCode: 21
                    message: "Wrong FollowType. It should be [1, 2]"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeNeedFollowMeErrorResponse'
              examples:
                InternalServerError:
                  value:
                    errorCode: 500
                    message: "InternalServerError"

  /admin/cars:
    get:
      summary: Получить список всех машин
      description: Возвращает список всех машин, зарегистрированных в системе.
      tags:
        - Admin
      operationId: GetCars
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
              examples:
                CarsList:
                  value:
                    - InternalId: "0000000-60bc-464d-8759-c04b79c25b25"
                      ExternalId: ""
                      Status: "Available"
                      CurrentNode: "Garage"
                    - InternalId: "1111111-60bc-464d-8759-c04b79c25b25"
                      ExternalId: "abc123"
                      Status: "Busy"
                      CurrentNode: "A1"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/cars/add:
    post:
      summary: Добавить новую машину
      description: Добавляет новую машину в систему.
      tags:
        - Admin
      operationId: AddCar
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCarResponse'
              examples:
                CarAdded:
                  value:
                    Message: "Машина 0000000-60bc-464d-8759-c04b79c25b25 добавлена!"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/cars/reload:
    post:
      summary: Перезагрузить все машины
      description: Перезагружает все машины в системе.
      tags:
        - Admin
      operationId: ReloadCars
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReloadCarsResponse'
              examples:
                CarsReloaded:
                  value:
                    Message: "Все машины успешно перезагружены."
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/logs:
    get:
      summary: Получить логи
      description: Возвращает список всех логов системы.
      tags:
        - Admin
      operationId: GetLogs
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                LogsList:
                  value:
                    - "2023-10-01T12:34:56 | INFO | Машина добавлена"
                    - "2023-10-01T12:35:10 | ERROR | Ошибка при чтении логов"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/logs/clear:
    post:
      summary: Очистить логи
      description: Очищает все логи системы.
      tags:
        - Admin
      operationId: ClearLogs
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearLogsResponse'
              examples:
                LogsCleared:
                  value:
                    Message: "Логи успешно очищены."
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/audit:
    get:
      summary: Получить аудит
      description: Возвращает список всех записей аудита.
      tags:
        - Admin
      operationId: GetAudit
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditEntry'
              examples:
                AuditList:
                  value:
                    - Timestamp: "2023-10-01T12:34:56"
                      CarId: "0000000-60bc-464d-8759-c04b79c25b25"
                      Movement: "Машина добавлена"
                    - Timestamp: "2023-10-01T12:35:10"
                      CarId: "1111111-60bc-464d-8759-c04b79c25b25"
                      Movement: "Машина удалена"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /admin/audit/clear:
    post:
      summary: Очистить аудит
      description: Очищает все записи аудита.
      tags:
        - Admin
      operationId: ClearAudit
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearAuditResponse'
              examples:
                AuditCleared:
                  value:
                    Message: "Аудит успешно очищен."
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    WeNeedFollowMeRequest:
      type: object
      properties:
        AirplaneId:
          type: string
          format: uuid
          description: Идентификатор самолета, которому необходимо сопровождение.
        NodeFrom:
          type: string
          description: Точка, куда надо приехать из гаража.
        NodeTo:
          type: string
          description: Точка, куда надо привезти самолет.
        IsTakeoff:
          type: boolean
          description: Посадочная полоса или нет.
      required:
        - AirplaneId
        - NodeFrom
        - NodeTo
        - IsTakeoff

    WeNeedFollowMeResponse:
      type: object
      properties:
        CarId:
          type: string
          format: uuid
          description: Идентификатор машины сопровождения.
        Wait:
          type: boolean
          description: Время ожидания машины сопровождения. true - ожидание необходимо, false - машина выезжает
      required:
        - CarId
        - Wait

    WeNeedFollowMeErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
          description: Код ошибки.
        message:
          type: string
          description: Сообщение об ошибке.
      required:
        - errorCode
        - message

    FollowMeNavigateRequest:
      type: object
      properties:
        Navigate:
          type: string
          enum: [follow, right, left, stop]
          description: Значения движения к самолету.
      required:
        - Navigate

    FollowMeNavigateErrorResponse:
      type: object
      properties:
        errorCode:
          type: integer
          description: Код ошибки.
        message:
          type: string
          description: Сообщение об ошибке.
      required:
        - errorCode
        - message

    Car:
      type: object
      properties:
        InternalId:
          type: string
          description: Внутренний ID машины.
        ExternalId:
          type: string
          description: Внешний ID машины.
        Status:
          type: string
          enum: [Available, Busy]
          description: Статус машины.
        CurrentNode:
          type: string
          description: Текущее местоположение машины.
      required:
        - InternalId
        - ExternalId
        - Status
        - CurrentNode

    AddCarResponse:
      type: object
      properties:
        Message:
          type: string
          description: Сообщение о добавлении машины.
      required:
        - Message

    ReloadCarsResponse:
      type: object
      properties:
        Message:
          type: string
          description: Сообщение о перезагрузке машин.
      required:
        - Message

    ClearLogsResponse:
      type: object
      properties:
        Message:
          type: string
          description: Сообщение об очистке логов.
      required:
        - Message

    ClearAuditResponse:
      type: object
      properties:
        Message:
          type: string
          description: Сообщение об очистке аудита.
      required:
        - Message

    ErrorResponse:
      type: object
      properties:
        Message:
          type: string
          description: Сообщение об ошибке.
      required:
        - Message

    AuditEntry:
      type: object
      properties:
        Timestamp:
          type: string
          format: date-time
          description: Время записи аудита.
        CarId:
          type: string
          description: ID машины.
        Movement:
          type: string
          description: Описание действия.
      required:
        - Timestamp
        - CarId
        - Movement